{"pageProps":{"post":{"title":"Writing Your Own TypeScript CLI","publishedAt":"December 6, 2021","description":"Writing CLIs feels like a super powerüíØ You can write one too! I'll show you how to develop a CLI with TypeScript step by step and demonstrate how you can apply your CLI in CD/CI pipelines. We're going to uncover the power of Google Lighthouse and many more amazing npm packages!","cover":"/optimized/articles/writing-your-own-typescript-cli/hero.webp","category":"TypeScript","coverWidth":"1411","coverHeight":"682","body":{"raw":"\n## TL;DR\n\n- üç≥ You can write a CLI with ease. It's simpler than you might think:)\n- üóº We'll write a CLI together to generate a Lighthouse performance report.\n- üî¶ You'll see how to configure TypeScript, ESLint, and Prettier.\n- üìö You'll see how to use some awesome libraries like [`chalk`](https://github.com/chalk/chalk) and [`commander`](https://github.com/tj/commander.js).\n- üßë‚Äçüî¨ You'll see how to spawn multiple processes.\n- üöÄ You'll see how to use your CLI in GitHub Actions.\n\n---\n\nWriting CLIs feels like a super power, and you can write one tooüíØ\n\nI'll show you how to develop a CLI with TypeScript step by step and demonstrate how you can apply your CLI in CD/CI pipelines.\n\nThis article covers three major topics:\n\n- [Setting up A TypeScript Project with ESLint and Prettier](#configuring-tooling)\n- [Writing a CLI to Run Lighthouse in Multiple Process](#writing-a-cli-to-run-lighthouse)\n- [Using the CLI in Action with GitHub Actions](#using-the-cli-in-github-actions)\n\nFeel free to jump to the parts that you're interested in.\n\n## Real-world Use Case\n\n[Lighthouse](https://developers.google.com/web/tools/lighthouse/) is one of the most popular dev tools to gain insight to webpage performances.\nIt offers a CLI and node module so we can run it programmatically.\nHowever, you'll notice the Lighthouse scores vary if you run it multiple times on the same webpage.\nThat's because there's a known [variability](https://developers.google.com/web/tools/lighthouse/variability).\nThere're many factors that plays into the Lighthouse variability.\nOne of the recommended strategies to deal with variance is to run Lighthouse multiple times.\n\nWe'll be working on a CLI to implement this strategy in this article. The implementation will cover:\n\n- Running multiple Lighthouse analyses\n- Aggregating data and calculating the median scores\n\nI hope you're excited!\n\n---\n\nThis article will discuss one of the scripts in üåàüåàüåà **[`dx-scripts`](https://github.com/DawChihLiou/dx-scripts)**üåàüåàüåà\n\nIt's available on [npm](https://www.npmjs.com/package/dx-scripts).\nI recently wrote the first script in the library and there are more to come!\nFeel free to install it and try it in your development workflow. Please give it a ‚≠êÔ∏è on [GitHub](https://github.com/DawChihLiou/dx-scripts) if the scripts are useful:)\n\n---\n\n## Peaking The Project's File Structure\n\nThis is how the file structure will look like after configuring the tooling.\n\n```bash\nmy-script\n‚îú‚îÄ‚îÄ .eslintrc.js\n‚îú‚îÄ‚îÄ .prettierrc.json\n‚îú‚îÄ‚îÄ package.json\n‚îú‚îÄ‚îÄ tsconfig.json\n‚îú‚îÄ‚îÄ bin\n‚îî‚îÄ‚îÄ src\n    ‚îú‚îÄ‚îÄ utils.ts\n    ‚îî‚îÄ‚îÄ index.ts\n```\n\nThe source files are located in the `/src` directory.\nWe'll compile them and output `.js` files in `/bin` directory.\n\nThe `/bin` directory will be the entry point of the command when your users are using the CLI.\nYou'll learn how to configure it in a bit.\n\n## Configuring Tooling\n\nWe'll be using [Yarn](https://yarnpkg.com/) as our package manager for this project.\nFeel free to use [npm](https://www.npmjs.com/) if you prefer.\n\nLet's initiate the project. We'll create a directory called `my-script`:\n\n```bash\n$ mkdir my-script && cd my-script\n```\n\nAt the project root, let's create a `package.json` with Yarn:\n\n```bash\n$ yarn init\n```\n\n### Configuring TypeScript\n\nTo install [TypeScript](https://www.typescriptlang.org/) and the types for [NodeJS](https://nodejs.org/en/), run:\n\n```bash\n$ yarn add --dev typescript @types/node\n```\n\nNow we are ready to configure TypeScript in the project.\nWe can initiate a `tsconfig.json` with `tsc`:\n\n```bash\n$ npx tsc --init\n```\n\nIn order to compile the TypeScript code and output the result to the `/bin` directory, we need to specify it in the `compilerOptions` in `tsconfig.json`.\n\n```diff\n// tsconfig.json\n\n{\n  \"compilerOptions\": {\n+    \"outDir\": \"./bin\"\n    /* rest of the default options */\n  }\n}\n```\n\nThat's it! Let's test it.\n\nAt the project root, run the following command to create an `index.ts` file in `/src`.\n\n```bash\n$ mkdir src && touch src/index.ts\n```\n\nIn `index.ts`, we'll put a simple `console.log` and run the TypeScript compiler to see if the compiled files are in the `/bin` directory.\n\n```ts\n// src/index.ts\n\nconsole.log('Hello from my-scriptüëã')\n```\n\nAdd a script to compile TypeScript with `tsc`.\n\n```diff\n// package.json\n\n+ \"scripts\": {\n+   \"tsc\": \"tsc\"\n+ }\n\n```\n\nThen run:\n\n```bash\n# compile `/src`\n$ yarn tsc\n```\n\nYou should see an `index.js` file in the `/bin` directory.\n\nLet's execute the `/bin` directory from the project root,\n\n```bash\n$ node bin\n\n# Hello from my-script üëã\n```\n\n### Configuring ESLint\n\nNow we ready for [ESLint](https://eslint.org/). We can go ahead and install it:\n\n```bash\n$ yarn add --dev eslint\n```\n\nESLint is a very powerful linter.\nIt doesn't come with TypeScript support so we'll install a [TypeScript parser](https://github.com/typescript-eslint/typescript-eslint/tree/6e159ee7cf8ef2028792cb8ee636cf6143fa967f/packages/parser):\n\n```bash\n$ yarn add --dev @typescript-eslint/parser @typescript-eslint/eslint-plugin\n```\n\nWe also installed the [`@typescript-eslint/eslint-plugin`](https://github.com/typescript-eslint/typescript-eslint/tree/6e159ee7cf8ef2028792cb8ee636cf6143fa967f/packages/eslint-plugin).\nThis is because we'll need it to extend the ESLint rules for TypeScript-specific features.\n\nLet's configure eslint in the project. We'll create a `.eslintrc.js` at the project root:\n\n```bash\ntouch .eslintrc.js\n```\n\nInside `.eslintrc.js`, we can configure eslint as following:\n\n```js\n// .eslintrc.js\n\nmodule.exports = {\n  parser: '@typescript-eslint/parser',\n  plugins: ['@typescript-eslint'],\n  extends: ['plugin:@typescript-eslint/recommended'],\n}\n```\n\nTo understand the configuration a little more, we first used `@typescript-eslint/parser` to enable ESLint's ability to understand TypeScript syntax.\nThen we applied `@typescript-eslint/eslint-plugin` plugin to extend the rules.\nFinally we enabled all the recommended rules form `@typescript-eslint/eslint-plugin`.\n\nIf you're interested in learning more about the configuration, you can checkout the [official doc](https://github.com/typescript-eslint/typescript-eslint/tree/main/packages/eslint-plugin#usage) for more details.\n\nWe can now add a linting script to `package.json`:\n\n```diff\n// package.json\n\n{\n  \"scripts\": {\n+    \"lint\": \"eslint '**/*.{js,ts}' --fix\",\n  }\n}\n```\n\nTo run the script:\n\n```bash\n$ yarn lint\n```\n\n### Configuring Prettier\n\n[Prettier](https://prettier.io/) is a very powerful formatter.\nIt comes with a set of rules to format our code.\nSometimes the rules can conflict with ESLint rules so I'll show you how to configure them.\n\nFirst install Prettier and create a `.prettierrc.json` file at the project root to hold the configuration,\n\n```bash\n$ yarn add --dev --exact prettier && touch .prettierrc.json\n```\n\nYou can edit `.prettierrc.json` and add your custom rules.\nYou can find [the options in the official doc](https://prettier.io/docs/en/options.html).\n\nHere's an example:\n\n```json\n// .prettierrc.json\n{\n  \"trailingComma\": \"all\",\n  \"singleQuote\": true\n}\n```\n\nPrettier provides handy integration with ESLint.\nWe'll follow the [recommended configuration](https://github.com/prettier/eslint-plugin-prettier#recommended-configuration) from the official doc.\n\n```bash\n$ yarn add --dev eslint-config-prettier eslint-plugin-prettier\n```\n\nWe'll add the plugin at the last position in the `extensions` array.\n\n```diff\n// .eslintrc.js\n\nmodule.exports = {\n  extends: [\n    'plugin:@typescript-eslint/recommended',\n+    'plugin:prettier/recommended',\n  ],\n}\n```\n\nIt's very important that Prettier is the last extension.\nBy applying last, it disables all formatting-related ESLint rules so the conflicts will fall back to Prettier.\n\nWe can now add a `prettier` script to `package.json`:\n\n```diff\n// package.json\n\n{\n  \"scripts\": {\n+    \"prettier\": \"prettier --write .\"\n  }\n}\n```\n\nTo run the script:\n\n```bash\n$ yarn prettier\n```\n\n### Configuring `package.json`\n\nWe are almost ready with our configuration.\nThe only thing missing is a way to execute the project the way you would execute a command.\nInstead of executing the `/bin` with `node`, we want to be able to call the command directly:\n\n```bash\n# instead of \"node bin\", we want to call the command by its name like this:\n$ my-script\n```\n\nHow do we do that? First we need to add a [Shebang](<https://en.wikipedia.org/wiki/Shebang_(Unix)>) on the top of our `src/index.ts`.\n\n```diff\n+ #!/usr/bin/env node\n\nconsole.log('Hello from my-scriptüëã')\n```\n\nThe Shebang is to inform Unix-like operating systems that this is NodeJS executable.\nSo we can call the script directly without specifying `node`.\n\nLet's compile again,\n\n```bash\n$ yarn tsc\n```\n\nThere's another thing we need before it all works. We need to assign the executable right to the `bin/index.js`:\n\n```bash\n$ chmod u+x ./bin/index.js\n```\n\nLet's give it a go:\n\n```bash\n# execute directly\n$ ./bin/index.js\n\n# Hello from my-scriptüëã\n```\n\nNice, we are almost there.\nThe last thing is to create a symlink between the command and the executable.\nFirst, we need to specify the `bin` property in `package.json` and point the command to the `bin/index.js`.\n\n```diff\n// package.json\n\n{\n+  \"bin\": {\n+    \"my-script\": \"./bin/index.js\"\n+  }\n}\n```\n\nSecond, create a symlink with Yarn at the project root:\n\n```bash\n$ yarn link\n\n# You can always unlink: \"yarn unlink my-script\"\n```\n\nLet's see if it worksü§©\n\n```bash\n$ my-script\n\n# Hello from my-scriptüëã\n```\n\nIt worksüéâüéâüéâ\n\nJust to make the development easier, we'll add a couple of scripts in `package.json`:\n\n```diff\n// package.json\n\n{\n  \"scripts\": {\n+    \"build\": \"yarn tsc && yarn chmod\",\n+    \"chmod\": \"chmod u+x ./bin/index.js\",\n  }\n}\n```\n\nNow we can run `yarn build` to compile and automatically assign the executable right to the entry file.\n\n## Writing a CLI to Run Lighthouse\n\nIt's time to implement our core logic.\nWe'll explore a few handy npm packages to help us write the CLI and we'll dive into the magic of Lighthouse.\n\n### Coloring `console.log` with `chalk`\n\n```bash\n$ yarn add chalk@4.1.2\n```\n\nMake sure you are installing `chalk 4`. [`chalk 5` is pure ESM](https://github.com/chalk/chalk/releases/tag/v5.0.0) and we won't be able to use it with TypeScript [until TypeScript 4.6 is released](https://github.com/microsoft/TypeScript/issues/46452).\n\n[`chalk`](https://github.com/chalk/chalk) gives colors to your `console.log`. For example:\n\n```ts\n// src/index.ts\n\nimport chalk from 'chalk'\n\nconsole.log(chalk.green('Hello from my-scriptüëã'))\n```\n\nNow run `yarn build && my-script` at your project root and see the log.\n\nLet's use `chalk` in a more meaningful way.\n[Lighthouse performane scores are color coded](https://web.dev/performance-scoring/#color-coding).\nWe can write a utility function that shows the display value with a color based on the performance score.\n\n```ts\n// src/utils.ts\n\nimport chalk from 'chalk'\n\n/**\n * Coloring display value based on Lighthouse score.\n *\n * - 0 to 0.49 (red): Poor\n * - 0.5 to 0.89 (orange): Needs Improvement\n * - 0.9 to 1 (green): Good\n */\nexport function draw(score: number, value: number) {\n  if (score >= 0.9 && score <= 1) {\n    return chalk.green(`${value} (Good)`)\n  }\n\n  if (score >= 0.5 && score < 0.9) {\n    return chalk.yellow(`${value} (Needs Improvement)`)\n  }\n\n  return chalk.red(`${value} (Poor)`)\n}\n```\n\nUse it in `src/index.ts` and try log something with `draw()` to see the result.\n\n```ts\n// src/index.ts\n\nimport { draw } from './utils'\n\nconsole.log(`Perf score is ${draw(0.64, 64)}`)\n```\n\n### Designing A Command with `commander`\n\nTo make our CLI interactive, we need to be able to read user inputs and parse them.\n[`commander`](https://github.com/tj/commander.js) is a descriptive way of defining a interface.\nWe can implement our interface in a very clean and documentary fashion.\n\nHow do we want the users to interact with the CLI is to simply pass a URL for Lighthouse to run.\nWe also want to pass in an option to specify how many times Lighthouse should run on the URL.\nLike this:\n\n```bash\n# without an option\n$ my-script https://dawchihliou.github.io/\n\n# with an option\n$ my-script https://dawchihliou.github.io/ --iteration=3\n```\n\nLet's see how quickly we can implement our design with `commander`.\n\n```bash\n$ yarn add commander\n```\n\nLet's clear the `src/index.ts` and start fresh:\n\n`src/index.ts`\n\n```ts\n#!/usr/bin/env node\n\nimport { Command } from 'commander'\n\nasync function run() {\n  const program = new Command()\n\n  program\n    .argument('<url>', 'Lighthouse will run the analysis on the URL.')\n    .option(\n      '-i, --iteration <type>',\n      'How many times Lighthouse should run the analysis per URL',\n      '5'\n    )\n    .parse()\n\n  const [url] = program.args\n  const options = program.opts()\n\n  console.log(`url: ${url}, iteration: ${options.iteration}`)\n}\n\nrun()\n```\n\nWe first instantiated a `Command` and we used the instance `program` to define:\n\n- an [`required argument`](https://github.com/tj/commander.js#command-arguments): we gave it a name `url` and a description\n- an [`option`](https://github.com/tj/commander.js#options): we gave it a short flag and a long flag, a description, and a default value\n\nTo consume the argument and option, we first parse the command and log the variables.\n\nNow we can run the command and observe the log.\n\n```bash\n$ yarn build\n\n# without an option\n$ my-script https://dawchihliou.github.io/\n\n# url: https://dawchihliou.github.io/, iteration: 5\n\n# with an option\n$ my-script https://dawchihliou.github.io/ --iteration=3\n# or\n$ my-script https://dawchihliou.github.io/ -i 3\n\n# url: https://dawchihliou.github.io/, iteration: 3\n```\n\nVery cool right?!\nAnother cool feature is that `commander` automatically generates a [`help`](https://github.com/tj/commander.js#automated-help) to print the help information.\n\n```bash\n$ my-script --help\n```\n\n### Running Multiple Lighthouse Analyses in Separate OS Processes\n\nWe learned how to parse user inputs in the previous section. It's time to dive into the core of the CLI.\n\nThe recommendation for running multiple Lighthouse is to run them in [separate processes](https://github.com/GoogleChrome/lighthouse/issues/7187) to remove the risk of interference.\n[`cross-spawn`](https://github.com/moxystudio/node-cross-spawn) is a cross platform solution for spawning processes.\nWe will use it to synchronously spawn new processes to run Lighthouse.\n\nTo install `cross-spawn`:\n\n```bash\n$ yarn add cross-spawn\n$ yarn add --dev @types/cross-spawn\n\n# Let's install lighthouse too‚ú®\nyarn add lighthouse\n```\n\nLet's edit `src/index.ts`:\n\n```diff\nimport { Command } from 'commander'\n+ import spawn from 'cross-spawn'\n\n+ const lighthouse = require.resolve('lighthouse/lighthouse-cli')\n\nasync function run() {\n  // ...\n-  console.log(`url: ${url}, iteration: ${options.iteration}`)\n+  console.log(\n+    `üóº Running Lighthouse for ${url}. It will take a while, please wait...`\n+  )\n+  const results = []\n+\n+  for (let i = 0; i < options.iteration; i++) {\n+    const { status, stdout } = spawn.sync(\n+      process.execPath, [\n+      lighthouse,\n+      url,\n+      '--output=json',\n+      '--chromeFlags=--headless',\n+      '--only-categories=performance',\n+    ])\n+\n+    if (status !== 0) {\n+      continue\n+    }\n+\n+    results.push(JSON.parse(stdout.toString()))\n+  }\n}\n```\n\nIn the code, we spawn new processes multiple times based on user input.\nIn each process, we ran Lighthouse performance analysis with headless Chrome and collect the the JSON data.\nThe `result` variable will hold an array of independent performance data in string.\nThe next step is to aggregate the data and calculate the most reliable performance scores.\n\nIf you implement the code above, you'll see a linting error about `require`.\n`require.resolve` resolves the path to a module instead of the module itself.\nIn this article, we'll allow the `@typescript-eslint/no-var-requires` rule in `.eslintrc.js` to compile.\n\n```diff\n// .eslintrc.js\n\nmodule.exports = {\n+  rules: {\n+    // allow require\n+    '@typescript-eslint/no-var-requires': 0,\n+  },\n}\n```\n\n### Calculating Reliable Lighthouse Scores\n\nOne strategy is to aggregate the reports by calculating the median.\nLighthouse provide a internal functionality [`computeMedianRun`](https://github.com/GoogleChrome/lighthouse/blob/master/lighthouse-core/lib/median-run.js).\nLet's use it\n\n```diff\n// src/index.ts\n\n+ // For simplicity, we use require here because lighthouse doesn't provide type declaration.\n+ const {\n+   computeMedianRun,\n+ } = require('lighthouse/lighthouse-core/lib/median-run.js')\n\nasync function run() {\n  // ...\n+   const median = computeMedianRun(results)\n\n+   console.log(`\\n${chalk.green('‚úî')} Report is ready for ${median.finalUrl}`)\n+   console.log(\n+     `üóº Median performance score: ${draw(\n+       median.categories.performance.score,\n+       median.categories.performance.score * 100\n+     )}`\n+   )\n\n+   const primaryMatrices = [\n+     'first-contentful-paint',\n+     'interactive',\n+     'speed-index',\n+     'total-blocking-time',\n+     'largest-contentful-paint',\n+     'cumulative-layout-shift',\n+   ]\n+\n+   primaryMatrices.map((matrix) => {\n+     const { title, displayValue, score } = median.audits[matrix]\n+     console.log(`üóº Median ${title}: ${draw(score, displayValue)}`)\n+   })\n}\n```\n\nUnder the hood, `computeMedianRun` returns the score that's closest to the median of the First Contentful Paint and the median of the Time to Interactive.\nIt's because they represent the earliest and the latest moments in the page initialization lifecycle.\nIt's a more reliable way to determine the median than the naive approach by finding the median from a single measurement.\n\nNow try the command again and see the result!\n\n```bash\n$ yarn build && my-script https://dawchihliou.github.io --iteration=3\n```\n\n<img\n  src=\"/optimized/articles/writing-your-own-typescript-cli/command-line.webp\"\n  alt=\"Screenshot of my-script final output\"\n  width=\"100%\"\n  loading=\"lazy\"\n/>\n\nWallaüéâ\n\n## Using the CLI in GitHub Actions\n\nOur implementation is done.\nLet's use the CLI in an automated workflow so we can benchmark the performance in a CD/CI pipeline.\n\nFirst, let's publish the package on npm (hypothetically).\n\nI published a npm package **[`dx-scripts`](https://github.com/DawChihLiou/dx-scripts/)** that includes the production-ready version of `my-script`.\nWe will write the GitHub Actions workflow with `dx-scripts` to illustrate.\n\n### Publishing on npm (an example)\n\nWe'll add a `files` property in `package.json` to publish the `/bin` directory.\n\n```diff\n// package.json\n\n{\n+  \"files\": [\"bin\"],\n}\n```\n\nThen simply run:\n\n```bash\n$ yarn publish\n```\n\nNow the package is on npm (hypothetically)!\n\n### Writing A Workflow\n\nLet's discuss the workflow. We want the workflow to:\n\n- run on a pull request when there's an update\n- run the Lighthouse performance analysis against a feature branch preview URL\n- notify the pull request with the analysis report\n\nSo after the workflow is successfully completed, you'll see a comment from GitHub Action Bot with your Lighthouse scores.\n\nTo focus on the application of our CLI, I'll hard-code the feature branch preview URL in the workflow.\n\nIn your application repository, install `dx-scripts`:\n\n```bash\n$ yarn add --dev dx-scripts\n```\n\nAdd a `lighthouse-dev-ci.yaml` to your GitHub workflows directory:\n\n````yaml\n# .github/workflows/lighthouse-dev-ci.yaml\n\nname: Lighthouse CI\n\non: pull_request\n\njobs:\n  lighthouse:\n    runs-on: ubuntu-latest\n    env:\n      # You can substitute the hardcoded preview url with your preview url\n      preview_url: https://dawchihliou.github.io/\n    steps:\n      - uses: actions/checkout@v2\n\n      - uses: actions/setup-node@v1\n        with:\n          node-version: '16.x'\n\n      - name: Install dependencies\n        run: yarn\n\n      # You can add your steps here to create a preview\n\n      - name: Run Lighthouse\n        id: lighthouse\n        shell: bash\n        run: |\n          lighthouse=$(npx dx-scripts lighthouse $preview_url)\n          lighthouse=\"${lighthouse//'%'/'%25'}\"\n          lighthouse=\"${lighthouse//$'\\n'/'%0A'}\"\n          lighthouse=\"${lighthouse//$'\\r'/'%0D'}\"\n          echo \"::set-output name=lighthouse_report::$lighthouse\"\n\n      - name: Notify PR\n        uses: wow-actions/auto-comment@v1\n        with:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n          pullRequestSynchronize: |\n            üëã @{{ author }},\n\n            Here is your Lighthouse performance overviewüéâ\n\n            ```\n            ${{ steps.lighthouse.outputs.lighthouse_report }}\n            ```\n````\n\nIn the \"Run Lighthouse\" step, we ran the `dx-script lighthouse` CLI, substitute the special characters in order to print multi-line output, and we set the output in a variable `lighthouse_report`.\nIn the \"Notify PR\" step, we wrote a comment with the output from the \"Run Lighthouse\" step and use the [`wow-actions/auto-comment` ](https://github.com/marketplace/actions/auto-comment) action to post the comment.\n\n<img\n  src=\"/optimized/articles/writing-your-own-typescript-cli/pr-comment.webp\"\n  alt=\"Screenshot of a PR comment posted from the Lighthouse CI\"\n  width=\"100%\"\n  loading=\"lazy\"\n/>\n\nThat's it! What a journey‚Äç.\nIt's amazing that you followed all the way through.\n\n## To Sum up\n\nWriting a CLI is not too hard, right?üòé\nLet's have a look at all the things we've covered:\n\n- configuring TypeScript\n- configuring ESLint\n- configuring Prettier\n- executing your command locally\n- coloring logs with `chalk`\n- defining your command with `commander`\n- spawning processes\n- executing Lighthouse CLI\n- using Lighthouse's internal library to calculate median performance scores\n- publish your command as a npm package\n- applying your command to a GitHub Action workflow\n\nNow the super power is yours tooüöÄ\n\n---\n\nHere you have it! I hope you find it useful. Thanks for reading throughüôå\n\nPlease share this article so that more people who're looking for inspirations can see it.\n\nFeel free to connect with me on [twitter](https://twitter.com/dawchihliou)!\n\nIf you're interested in reading more about image optimization to boost your performance score, take a look at my previous article [\"Using WebP for Better User Experience\"](/articles/use-webp-for-better-ux).\nThere we discussed one of the modern image formats that greatly reduces the size of your images without sacrificing quality.\n\nIf you're wondering how to test Redux Observable, I wrote an article [\"Writing Better Marble Tests for Redux Observable and TypeScript\"](https://itnext.io/better-marble-test-70c7676a1e2) just for you.\nIt's a comprehensive guide to walk you through the thought process.\n\nIf you‚Äôre a fan of functional programming, check out [this article that I wrote about Transducers](https://medium.com/@dawchihliou/intuitive-transducer-in-javascript-f358d3fe53d).\nIt‚Äôs a step by step reasoning on writing a transducer and it touches on key ideas about functional programming.\n\nHappy coding!\n","code":"var Component=(()=>{var o=Object.create;var l=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var c=a=>l(a,\"__esModule\",{value:!0});var u=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),N=(a,e)=>{c(a);for(var s in e)l(a,s,{get:e[s],enumerable:!0})},g=(a,e,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of h(e))!m.call(a,i)&&i!==\"default\"&&l(a,i,{get:()=>e[i],enumerable:!(s=d(e,i))||s.enumerable});return a},k=a=>g(c(l(a!=null?o(p(a)):{},\"default\",a&&a.__esModule&&\"default\"in a?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a);var r=u((x,t)=>{t.exports=_jsx_runtime});var w={};N(w,{default:()=>y});var n=k(r());function f(a={}){let e=Object.assign({h2:\"h2\",a:\"a\",span:\"span\",ul:\"ul\",li:\"li\",code:\"code\",hr:\"hr\",p:\"p\",pre:\"pre\",h3:\"h3\",strong:\"strong\"},a.components),{wrapper:s}=e,i=(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.h2,{id:\"tldr\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#tldr\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"TL;DR\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"cooking\",children:\"\\u{1F373}\"}),\" You can write a CLI with ease. It's simpler than you might think:)\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"Tokyo tower\",children:\"\\u{1F5FC}\"}),\" We'll write a CLI together to generate a Lighthouse performance report.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"flashlight\",children:\"\\u{1F526}\"}),\" You'll see how to configure TypeScript, ESLint, and Prettier.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"books\",children:\"\\u{1F4DA}\"}),\" You'll see how to use some awesome libraries like \",(0,n.jsx)(e.a,{href:\"https://github.com/chalk/chalk\",children:(0,n.jsx)(e.code,{children:\"chalk\"})}),\" and \",(0,n.jsx)(e.a,{href:\"https://github.com/tj/commander.js\",children:(0,n.jsx)(e.code,{children:\"commander\"})}),\".\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"\",\"aria-hidden\":!0,children:\"\\u{1F9D1}\"}),\"\\u200D\",(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"microscope\",children:\"\\u{1F52C}\"}),\" You'll see how to spawn multiple processes.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"rocket\",children:\"\\u{1F680}\"}),\" You'll see how to use your CLI in GitHub Actions.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.hr,{}),`\n`,(0,n.jsxs)(e.p,{children:[\"Writing CLIs feels like a super power, and you can write one too\",(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"hundred points\",children:\"\\u{1F4AF}\"})]}),`\n`,(0,n.jsx)(e.p,{children:\"I'll show you how to develop a CLI with TypeScript step by step and demonstrate how you can apply your CLI in CD/CI pipelines.\"}),`\n`,(0,n.jsx)(e.p,{children:\"This article covers three major topics:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"#configuring-tooling\",children:\"Setting up A TypeScript Project with ESLint and Prettier\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"#writing-a-cli-to-run-lighthouse\",children:\"Writing a CLI to Run Lighthouse in Multiple Process\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"#using-the-cli-in-github-actions\",children:\"Using the CLI in Action with GitHub Actions\"})}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"Feel free to jump to the parts that you're interested in.\"}),`\n`,(0,n.jsxs)(e.h2,{id:\"real-world-use-case\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#real-world-use-case\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Real-world Use Case\"]}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.a,{href:\"https://developers.google.com/web/tools/lighthouse/\",children:\"Lighthouse\"}),` is one of the most popular dev tools to gain insight to webpage performances.\nIt offers a CLI and node module so we can run it programmatically.\nHowever, you'll notice the Lighthouse scores vary if you run it multiple times on the same webpage.\nThat's because there's a known `,(0,n.jsx)(e.a,{href:\"https://developers.google.com/web/tools/lighthouse/variability\",children:\"variability\"}),`.\nThere're many factors that plays into the Lighthouse variability.\nOne of the recommended strategies to deal with variance is to run Lighthouse multiple times.`]}),`\n`,(0,n.jsx)(e.p,{children:\"We'll be working on a CLI to implement this strategy in this article. The implementation will cover:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Running multiple Lighthouse analyses\"}),`\n`,(0,n.jsx)(e.li,{children:\"Aggregating data and calculating the median scores\"}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"I hope you're excited!\"}),`\n`,(0,n.jsx)(e.hr,{}),`\n`,(0,n.jsxs)(e.p,{children:[\"This article will discuss one of the scripts in \",(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"rainbow\",children:\"\\u{1F308}\"}),(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"rainbow\",children:\"\\u{1F308}\"}),(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"rainbow\",children:\"\\u{1F308}\"}),\" **\",(0,n.jsx)(e.a,{href:\"https://github.com/DawChihLiou/dx-scripts\",children:(0,n.jsx)(e.code,{children:\"dx-scripts\"})}),\"**\",(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"rainbow\",children:\"\\u{1F308}\"}),(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"rainbow\",children:\"\\u{1F308}\"}),(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"rainbow\",children:\"\\u{1F308}\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"It's available on \",(0,n.jsx)(e.a,{href:\"https://www.npmjs.com/package/dx-scripts\",children:\"npm\"}),`.\nI recently wrote the first script in the library and there are more to come!\nFeel free to install it and try it in your development workflow. Please give it a `,(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"\",\"aria-hidden\":!0,children:\"\\u2B50\"}),\"\\uFE0F on \",(0,n.jsx)(e.a,{href:\"https://github.com/DawChihLiou/dx-scripts\",children:\"GitHub\"}),\" if the scripts are useful:)\"]}),`\n`,(0,n.jsx)(e.hr,{}),`\n`,(0,n.jsxs)(e.h2,{id:\"peaking-the-projects-file-structure\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#peaking-the-projects-file-structure\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Peaking The Project's File Structure\"]}),`\n`,(0,n.jsx)(e.p,{children:\"This is how the file structure will look like after configuring the tooling.\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsxs)(e.code,{className:\"language-bash code-highlight\",children:[(0,n.jsx)(e.span,{className:\"code-line\",children:`my-script\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\\u251C\\u2500\\u2500 .eslintrc.js\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\\u251C\\u2500\\u2500 .prettierrc.json\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\\u251C\\u2500\\u2500 package.json\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\\u251C\\u2500\\u2500 tsconfig.json\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\\u251C\\u2500\\u2500 bin\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\\u2514\\u2500\\u2500 src\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`    \\u251C\\u2500\\u2500 utils.ts\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`    \\u2514\\u2500\\u2500 index.ts\n`})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"The source files are located in the \",(0,n.jsx)(e.code,{children:\"/src\"}),` directory.\nWe'll compile them and output `,(0,n.jsx)(e.code,{children:\".js\"}),\" files in \",(0,n.jsx)(e.code,{children:\"/bin\"}),\" directory.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"The \",(0,n.jsx)(e.code,{children:\"/bin\"}),` directory will be the entry point of the command when your users are using the CLI.\nYou'll learn how to configure it in a bit.`]}),`\n`,(0,n.jsxs)(e.h2,{id:\"configuring-tooling\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#configuring-tooling\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Configuring Tooling\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"We'll be using \",(0,n.jsx)(e.a,{href:\"https://yarnpkg.com/\",children:\"Yarn\"}),` as our package manager for this project.\nFeel free to use `,(0,n.jsx)(e.a,{href:\"https://www.npmjs.com/\",children:\"npm\"}),\" if you prefer.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Let's initiate the project. We'll create a directory called \",(0,n.jsx)(e.code,{children:\"my-script\"}),\":\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsx)(e.code,{className:\"language-bash code-highlight\",children:(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"$ \",(0,n.jsx)(e.span,{className:\"token function\",children:\"mkdir\"}),\" my-script \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"&&\"}),\" \",(0,n.jsx)(e.span,{className:\"token builtin class-name\",children:\"cd\"}),` my-script\n`]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"At the project root, let's create a \",(0,n.jsx)(e.code,{children:\"package.json\"}),\" with Yarn:\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsx)(e.code,{className:\"language-bash code-highlight\",children:(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"$ \",(0,n.jsx)(e.span,{className:\"token function\",children:\"yarn\"}),` init\n`]})})}),`\n`,(0,n.jsxs)(e.h3,{id:\"configuring-typescript\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#configuring-typescript\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Configuring TypeScript\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"To install \",(0,n.jsx)(e.a,{href:\"https://www.typescriptlang.org/\",children:\"TypeScript\"}),\" and the types for \",(0,n.jsx)(e.a,{href:\"https://nodejs.org/en/\",children:\"NodeJS\"}),\", run:\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsx)(e.code,{className:\"language-bash code-highlight\",children:(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"$ \",(0,n.jsx)(e.span,{className:\"token function\",children:\"yarn\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"add\"}),` --dev typescript @types/node\n`]})})}),`\n`,(0,n.jsxs)(e.p,{children:[`Now we are ready to configure TypeScript in the project.\nWe can initiate a `,(0,n.jsx)(e.code,{children:\"tsconfig.json\"}),\" with \",(0,n.jsx)(e.code,{children:\"tsc\"}),\":\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsx)(e.code,{className:\"language-bash code-highlight\",children:(0,n.jsx)(e.span,{className:\"code-line\",children:`$ npx tsc --init\n`})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"In order to compile the TypeScript code and output the result to the \",(0,n.jsx)(e.code,{children:\"/bin\"}),\" directory, we need to specify it in the \",(0,n.jsx)(e.code,{children:\"compilerOptions\"}),\" in \",(0,n.jsx)(e.code,{children:\"tsconfig.json\"}),\".\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-diff\",children:(0,n.jsxs)(e.code,{className:\"language-diff code-highlight\",children:[(0,n.jsx)(e.span,{className:\"code-line\",children:`// tsconfig.json\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`{\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsxs)(e.span,{className:\"token unchanged\",children:[(0,n.jsx)(e.span,{className:\"token prefix unchanged\",children:\" \"}),(0,n.jsx)(e.span,{className:\"token line\",children:` \"compilerOptions\": {\n`})]})}),(0,n.jsxs)(e.span,{className:\"code-line inserted\",children:[(0,n.jsx)(e.span,{className:\"token unchanged\",children:(0,n.jsx)(e.span,{className:\"token line\"})}),(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`    \"outDir\": \"./bin\"\n`})]})]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token inserted-sign inserted\",children:(0,n.jsx)(e.span,{className:\"token line\"})}),(0,n.jsxs)(e.span,{className:\"token unchanged\",children:[(0,n.jsx)(e.span,{className:\"token prefix unchanged\",children:\" \"}),(0,n.jsx)(e.span,{className:\"token line\",children:`   /* rest of the default options */\n`})]})]}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsxs)(e.span,{className:\"token unchanged\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix unchanged\",children:\" \"}),(0,n.jsx)(e.span,{className:\"token line\",children:` }\n`})]})}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token unchanged\",children:(0,n.jsx)(e.span,{className:\"token line\"})}),`}\n`]})]})}),`\n`,(0,n.jsx)(e.p,{children:\"That's it! Let's test it.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"At the project root, run the following command to create an \",(0,n.jsx)(e.code,{children:\"index.ts\"}),\" file in \",(0,n.jsx)(e.code,{children:\"/src\"}),\".\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsx)(e.code,{className:\"language-bash code-highlight\",children:(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"$ \",(0,n.jsx)(e.span,{className:\"token function\",children:\"mkdir\"}),\" src \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"&&\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"touch\"}),` src/index.ts\n`]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"In \",(0,n.jsx)(e.code,{children:\"index.ts\"}),\", we'll put a simple \",(0,n.jsx)(e.code,{children:\"console.log\"}),\" and run the TypeScript compiler to see if the compiled files are in the \",(0,n.jsx)(e.code,{children:\"/bin\"}),\" directory.\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-ts\",children:(0,n.jsxs)(e.code,{className:\"language-ts code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"// src/index.ts\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token builtin\",children:\"console\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"log\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsxs)(e.span,{className:\"token string\",children:[\"'Hello from my-script\",(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"waving hand\",children:\"\\u{1F44B}\"}),\"'\"]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Add a script to compile TypeScript with \",(0,n.jsx)(e.code,{children:\"tsc\"}),\".\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-diff\",children:(0,n.jsxs)(e.code,{className:\"language-diff code-highlight\",children:[(0,n.jsx)(e.span,{className:\"code-line\",children:`// package.json\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:` \"scripts\": {\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`   \"tsc\": \"tsc\"\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:` }\n`})]})}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token inserted-sign inserted\",children:(0,n.jsx)(e.span,{className:\"token line\"})}),`\n`]})]})}),`\n`,(0,n.jsx)(e.p,{children:\"Then run:\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsxs)(e.code,{className:\"language-bash code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"# compile `/src`\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"$ \",(0,n.jsx)(e.span,{className:\"token function\",children:\"yarn\"}),` tsc\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"You should see an \",(0,n.jsx)(e.code,{children:\"index.js\"}),\" file in the \",(0,n.jsx)(e.code,{children:\"/bin\"}),\" directory.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Let's execute the \",(0,n.jsx)(e.code,{children:\"/bin\"}),\" directory from the project root,\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsxs)(e.code,{className:\"language-bash code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"$ \",(0,n.jsx)(e.span,{className:\"token function\",children:\"node\"}),` bin\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsxs)(e.span,{className:\"token comment\",children:[\"# Hello from my-script \",(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"waving hand\",children:\"\\u{1F44B}\"})]}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.h3,{id:\"configuring-eslint\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#configuring-eslint\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Configuring ESLint\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Now we ready for \",(0,n.jsx)(e.a,{href:\"https://eslint.org/\",children:\"ESLint\"}),\". We can go ahead and install it:\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsx)(e.code,{className:\"language-bash code-highlight\",children:(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"$ \",(0,n.jsx)(e.span,{className:\"token function\",children:\"yarn\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"add\"}),` --dev eslint\n`]})})}),`\n`,(0,n.jsxs)(e.p,{children:[`ESLint is a very powerful linter.\nIt doesn't come with TypeScript support so we'll install a `,(0,n.jsx)(e.a,{href:\"https://github.com/typescript-eslint/typescript-eslint/tree/6e159ee7cf8ef2028792cb8ee636cf6143fa967f/packages/parser\",children:\"TypeScript parser\"}),\":\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsx)(e.code,{className:\"language-bash code-highlight\",children:(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"$ \",(0,n.jsx)(e.span,{className:\"token function\",children:\"yarn\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"add\"}),` --dev @typescript-eslint/parser @typescript-eslint/eslint-plugin\n`]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"We also installed the \",(0,n.jsx)(e.a,{href:\"https://github.com/typescript-eslint/typescript-eslint/tree/6e159ee7cf8ef2028792cb8ee636cf6143fa967f/packages/eslint-plugin\",children:(0,n.jsx)(e.code,{children:\"@typescript-eslint/eslint-plugin\"})}),`.\nThis is because we'll need it to extend the ESLint rules for TypeScript-specific features.`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Let's configure eslint in the project. We'll create a \",(0,n.jsx)(e.code,{children:\".eslintrc.js\"}),\" at the project root:\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsx)(e.code,{className:\"language-bash code-highlight\",children:(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token function\",children:\"touch\"}),` .eslintrc.js\n`]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Inside \",(0,n.jsx)(e.code,{children:\".eslintrc.js\"}),\", we can configure eslint as following:\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-js\",children:(0,n.jsxs)(e.code,{className:\"language-js code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"// .eslintrc.js\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"module\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token property-access\",children:\"exports\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token literal-property property\",children:\"parser\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'@typescript-eslint/parser'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token literal-property property\",children:\"plugins\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token string\",children:\"'@typescript-eslint'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"extends\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token string\",children:\"'plugin:@typescript-eslint/recommended'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"To understand the configuration a little more, we first used \",(0,n.jsx)(e.code,{children:\"@typescript-eslint/parser\"}),` to enable ESLint's ability to understand TypeScript syntax.\nThen we applied `,(0,n.jsx)(e.code,{children:\"@typescript-eslint/eslint-plugin\"}),` plugin to extend the rules.\nFinally we enabled all the recommended rules form `,(0,n.jsx)(e.code,{children:\"@typescript-eslint/eslint-plugin\"}),\".\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"If you're interested in learning more about the configuration, you can checkout the \",(0,n.jsx)(e.a,{href:\"https://github.com/typescript-eslint/typescript-eslint/tree/main/packages/eslint-plugin#usage\",children:\"official doc\"}),\" for more details.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"We can now add a linting script to \",(0,n.jsx)(e.code,{children:\"package.json\"}),\":\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-diff\",children:(0,n.jsxs)(e.code,{className:\"language-diff code-highlight\",children:[(0,n.jsx)(e.span,{className:\"code-line\",children:`// package.json\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`{\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsxs)(e.span,{className:\"token unchanged\",children:[(0,n.jsx)(e.span,{className:\"token prefix unchanged\",children:\" \"}),(0,n.jsx)(e.span,{className:\"token line\",children:` \"scripts\": {\n`})]})}),(0,n.jsxs)(e.span,{className:\"code-line inserted\",children:[(0,n.jsx)(e.span,{className:\"token unchanged\",children:(0,n.jsx)(e.span,{className:\"token line\"})}),(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`    \"lint\": \"eslint '**/*.{js,ts}' --fix\",\n`})]})]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token inserted-sign inserted\",children:(0,n.jsx)(e.span,{className:\"token line\"})}),(0,n.jsxs)(e.span,{className:\"token unchanged\",children:[(0,n.jsx)(e.span,{className:\"token prefix unchanged\",children:\" \"}),(0,n.jsx)(e.span,{className:\"token line\",children:` }\n`})]})]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token unchanged\",children:(0,n.jsx)(e.span,{className:\"token line\"})}),`}\n`]})]})}),`\n`,(0,n.jsx)(e.p,{children:\"To run the script:\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsx)(e.code,{className:\"language-bash code-highlight\",children:(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"$ \",(0,n.jsx)(e.span,{className:\"token function\",children:\"yarn\"}),` lint\n`]})})}),`\n`,(0,n.jsxs)(e.h3,{id:\"configuring-prettier\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#configuring-prettier\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Configuring Prettier\"]}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.a,{href:\"https://prettier.io/\",children:\"Prettier\"}),` is a very powerful formatter.\nIt comes with a set of rules to format our code.\nSometimes the rules can conflict with ESLint rules so I'll show you how to configure them.`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"First install Prettier and create a \",(0,n.jsx)(e.code,{children:\".prettierrc.json\"}),\" file at the project root to hold the configuration,\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsx)(e.code,{className:\"language-bash code-highlight\",children:(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"$ \",(0,n.jsx)(e.span,{className:\"token function\",children:\"yarn\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"add\"}),\" --dev --exact prettier \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"&&\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"touch\"}),` .prettierrc.json\n`]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"You can edit \",(0,n.jsx)(e.code,{children:\".prettierrc.json\"}),` and add your custom rules.\nYou can find `,(0,n.jsx)(e.a,{href:\"https://prettier.io/docs/en/options.html\",children:\"the options in the official doc\"}),\".\"]}),`\n`,(0,n.jsx)(e.p,{children:\"Here's an example:\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-json\",children:(0,n.jsxs)(e.code,{className:\"language-json code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"// .prettierrc.json\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token property\",children:'\"trailingComma\"'}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"all\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token property\",children:'\"singleQuote\"'}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token boolean\",children:\"true\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[`Prettier provides handy integration with ESLint.\nWe'll follow the `,(0,n.jsx)(e.a,{href:\"https://github.com/prettier/eslint-plugin-prettier#recommended-configuration\",children:\"recommended configuration\"}),\" from the official doc.\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsx)(e.code,{className:\"language-bash code-highlight\",children:(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"$ \",(0,n.jsx)(e.span,{className:\"token function\",children:\"yarn\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"add\"}),` --dev eslint-config-prettier eslint-plugin-prettier\n`]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"We'll add the plugin at the last position in the \",(0,n.jsx)(e.code,{children:\"extensions\"}),\" array.\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-diff\",children:(0,n.jsxs)(e.code,{className:\"language-diff code-highlight\",children:[(0,n.jsx)(e.span,{className:\"code-line\",children:`// .eslintrc.js\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`module.exports = {\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsxs)(e.span,{className:\"token unchanged\",children:[(0,n.jsx)(e.span,{className:\"token prefix unchanged\",children:\" \"}),(0,n.jsx)(e.span,{className:\"token line\",children:` extends: [\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsxs)(e.span,{className:\"token unchanged\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix unchanged\",children:\" \"}),(0,n.jsx)(e.span,{className:\"token line\",children:`   'plugin:@typescript-eslint/recommended',\n`})]})}),(0,n.jsxs)(e.span,{className:\"code-line inserted\",children:[(0,n.jsx)(e.span,{className:\"token unchanged\",children:(0,n.jsx)(e.span,{className:\"token line\"})}),(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`    'plugin:prettier/recommended',\n`})]})]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token inserted-sign inserted\",children:(0,n.jsx)(e.span,{className:\"token line\"})}),(0,n.jsxs)(e.span,{className:\"token unchanged\",children:[(0,n.jsx)(e.span,{className:\"token prefix unchanged\",children:\" \"}),(0,n.jsx)(e.span,{className:\"token line\",children:` ],\n`})]})]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token unchanged\",children:(0,n.jsx)(e.span,{className:\"token line\"})}),`}\n`]})]})}),`\n`,(0,n.jsx)(e.p,{children:`It's very important that Prettier is the last extension.\nBy applying last, it disables all formatting-related ESLint rules so the conflicts will fall back to Prettier.`}),`\n`,(0,n.jsxs)(e.p,{children:[\"We can now add a \",(0,n.jsx)(e.code,{children:\"prettier\"}),\" script to \",(0,n.jsx)(e.code,{children:\"package.json\"}),\":\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-diff\",children:(0,n.jsxs)(e.code,{className:\"language-diff code-highlight\",children:[(0,n.jsx)(e.span,{className:\"code-line\",children:`// package.json\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`{\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsxs)(e.span,{className:\"token unchanged\",children:[(0,n.jsx)(e.span,{className:\"token prefix unchanged\",children:\" \"}),(0,n.jsx)(e.span,{className:\"token line\",children:` \"scripts\": {\n`})]})}),(0,n.jsxs)(e.span,{className:\"code-line inserted\",children:[(0,n.jsx)(e.span,{className:\"token unchanged\",children:(0,n.jsx)(e.span,{className:\"token line\"})}),(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`    \"prettier\": \"prettier --write .\"\n`})]})]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token inserted-sign inserted\",children:(0,n.jsx)(e.span,{className:\"token line\"})}),(0,n.jsxs)(e.span,{className:\"token unchanged\",children:[(0,n.jsx)(e.span,{className:\"token prefix unchanged\",children:\" \"}),(0,n.jsx)(e.span,{className:\"token line\",children:` }\n`})]})]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token unchanged\",children:(0,n.jsx)(e.span,{className:\"token line\"})}),`}\n`]})]})}),`\n`,(0,n.jsx)(e.p,{children:\"To run the script:\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsx)(e.code,{className:\"language-bash code-highlight\",children:(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"$ \",(0,n.jsx)(e.span,{className:\"token function\",children:\"yarn\"}),` prettier\n`]})})}),`\n`,(0,n.jsxs)(e.h3,{id:\"configuring-packagejson\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#configuring-packagejson\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Configuring \",(0,n.jsx)(e.code,{children:\"package.json\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[`We are almost ready with our configuration.\nThe only thing missing is a way to execute the project the way you would execute a command.\nInstead of executing the `,(0,n.jsx)(e.code,{children:\"/bin\"}),\" with \",(0,n.jsx)(e.code,{children:\"node\"}),\", we want to be able to call the command directly:\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsxs)(e.code,{className:\"language-bash code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:'# instead of \"node bin\", we want to call the command by its name like this:'}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`$ my-script\n`})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"How do we do that? First we need to add a \",(0,n.jsx)(e.a,{href:\"https://en.wikipedia.org/wiki/Shebang_(Unix)\",children:\"Shebang\"}),\" on the top of our \",(0,n.jsx)(e.code,{children:\"src/index.ts\"}),\".\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-diff\",children:(0,n.jsxs)(e.code,{className:\"language-diff code-highlight\",children:[(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:` #!/usr/bin/env node\n`})]})}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token inserted-sign inserted\",children:(0,n.jsx)(e.span,{className:\"token line\"})}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"console.log('Hello from my-script\",(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"waving hand\",children:\"\\u{1F44B}\"}),`')\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[`The Shebang is to inform Unix-like operating systems that this is NodeJS executable.\nSo we can call the script directly without specifying `,(0,n.jsx)(e.code,{children:\"node\"}),\".\"]}),`\n`,(0,n.jsx)(e.p,{children:\"Let's compile again,\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsx)(e.code,{className:\"language-bash code-highlight\",children:(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"$ \",(0,n.jsx)(e.span,{className:\"token function\",children:\"yarn\"}),` tsc\n`]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"There's another thing we need before it all works. We need to assign the executable right to the \",(0,n.jsx)(e.code,{children:\"bin/index.js\"}),\":\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsx)(e.code,{className:\"language-bash code-highlight\",children:(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"$ \",(0,n.jsx)(e.span,{className:\"token function\",children:\"chmod\"}),` u+x ./bin/index.js\n`]})})}),`\n`,(0,n.jsx)(e.p,{children:\"Let's give it a go:\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsxs)(e.code,{className:\"language-bash code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"# execute directly\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`$ ./bin/index.js\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsxs)(e.span,{className:\"token comment\",children:[\"# Hello from my-script\",(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"waving hand\",children:\"\\u{1F44B}\"})]}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[`Nice, we are almost there.\nThe last thing is to create a symlink between the command and the executable.\nFirst, we need to specify the `,(0,n.jsx)(e.code,{children:\"bin\"}),\" property in \",(0,n.jsx)(e.code,{children:\"package.json\"}),\" and point the command to the \",(0,n.jsx)(e.code,{children:\"bin/index.js\"}),\".\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-diff\",children:(0,n.jsxs)(e.code,{className:\"language-diff code-highlight\",children:[(0,n.jsx)(e.span,{className:\"code-line\",children:`// package.json\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`{\n`}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`  \"bin\": {\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`    \"my-script\": \"./bin/index.js\"\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`  }\n`})]})}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token inserted-sign inserted\",children:(0,n.jsx)(e.span,{className:\"token line\"})}),`}\n`]})]})}),`\n`,(0,n.jsx)(e.p,{children:\"Second, create a symlink with Yarn at the project root:\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsxs)(e.code,{className:\"language-bash code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"$ \",(0,n.jsx)(e.span,{className:\"token function\",children:\"yarn\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"link\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:'# You can always unlink: \"yarn unlink my-script\"'}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Let's see if it works\",(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"\",\"aria-hidden\":!0,children:\"\\u{1F929}\"})]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsxs)(e.code,{className:\"language-bash code-highlight\",children:[(0,n.jsx)(e.span,{className:\"code-line\",children:`$ my-script\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsxs)(e.span,{className:\"token comment\",children:[\"# Hello from my-script\",(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"waving hand\",children:\"\\u{1F44B}\"})]}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"It works\",(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"party popper\",children:\"\\u{1F389}\"}),(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"party popper\",children:\"\\u{1F389}\"}),(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"party popper\",children:\"\\u{1F389}\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Just to make the development easier, we'll add a couple of scripts in \",(0,n.jsx)(e.code,{children:\"package.json\"}),\":\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-diff\",children:(0,n.jsxs)(e.code,{className:\"language-diff code-highlight\",children:[(0,n.jsx)(e.span,{className:\"code-line\",children:`// package.json\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`{\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsxs)(e.span,{className:\"token unchanged\",children:[(0,n.jsx)(e.span,{className:\"token prefix unchanged\",children:\" \"}),(0,n.jsx)(e.span,{className:\"token line\",children:` \"scripts\": {\n`})]})}),(0,n.jsxs)(e.span,{className:\"code-line inserted\",children:[(0,n.jsx)(e.span,{className:\"token unchanged\",children:(0,n.jsx)(e.span,{className:\"token line\"})}),(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`    \"build\": \"yarn tsc && yarn chmod\",\n`})]})]}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`    \"chmod\": \"chmod u+x ./bin/index.js\",\n`})]})}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token inserted-sign inserted\",children:(0,n.jsx)(e.span,{className:\"token line\"})}),(0,n.jsxs)(e.span,{className:\"token unchanged\",children:[(0,n.jsx)(e.span,{className:\"token prefix unchanged\",children:\" \"}),(0,n.jsx)(e.span,{className:\"token line\",children:` }\n`})]})]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token unchanged\",children:(0,n.jsx)(e.span,{className:\"token line\"})}),`}\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Now we can run \",(0,n.jsx)(e.code,{children:\"yarn build\"}),\" to compile and automatically assign the executable right to the entry file.\"]}),`\n`,(0,n.jsxs)(e.h2,{id:\"writing-a-cli-to-run-lighthouse\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#writing-a-cli-to-run-lighthouse\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Writing a CLI to Run Lighthouse\"]}),`\n`,(0,n.jsx)(e.p,{children:`It's time to implement our core logic.\nWe'll explore a few handy npm packages to help us write the CLI and we'll dive into the magic of Lighthouse.`}),`\n`,(0,n.jsxs)(e.h3,{id:\"coloring-consolelog-with-chalk\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#coloring-consolelog-with-chalk\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Coloring \",(0,n.jsx)(e.code,{children:\"console.log\"}),\" with \",(0,n.jsx)(e.code,{children:\"chalk\"})]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsx)(e.code,{className:\"language-bash code-highlight\",children:(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"$ \",(0,n.jsx)(e.span,{className:\"token function\",children:\"yarn\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"add\"}),` chalk@4.1.2\n`]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Make sure you are installing \",(0,n.jsx)(e.code,{children:\"chalk 4\"}),\". \",(0,n.jsxs)(e.a,{href:\"https://github.com/chalk/chalk/releases/tag/v5.0.0\",children:[(0,n.jsx)(e.code,{children:\"chalk 5\"}),\" is pure ESM\"]}),\" and we won't be able to use it with TypeScript \",(0,n.jsx)(e.a,{href:\"https://github.com/microsoft/TypeScript/issues/46452\",children:\"until TypeScript 4.6 is released\"}),\".\"]}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.a,{href:\"https://github.com/chalk/chalk\",children:(0,n.jsx)(e.code,{children:\"chalk\"})}),\" gives colors to your \",(0,n.jsx)(e.code,{children:\"console.log\"}),\". For example:\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-ts\",children:(0,n.jsxs)(e.code,{className:\"language-ts code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"// src/index.ts\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"import\"}),\" chalk \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"from\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'chalk'\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token builtin\",children:\"console\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"log\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"chalk\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"green\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsxs)(e.span,{className:\"token string\",children:[\"'Hello from my-script\",(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"waving hand\",children:\"\\u{1F44B}\"}),\"'\"]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Now run \",(0,n.jsx)(e.code,{children:\"yarn build && my-script\"}),\" at your project root and see the log.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Let's use \",(0,n.jsx)(e.code,{children:\"chalk\"}),` in a more meaningful way.\n`,(0,n.jsx)(e.a,{href:\"https://web.dev/performance-scoring/#color-coding\",children:\"Lighthouse performane scores are color coded\"}),`.\nWe can write a utility function that shows the display value with a color based on the performance score.`]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-ts\",children:(0,n.jsxs)(e.code,{className:\"language-ts code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"// src/utils.ts\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"import\"}),\" chalk \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"from\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'chalk'\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`/**\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:` * Coloring display value based on Lighthouse score.\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:` *\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:` * - 0 to 0.49 (red): Poor\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:` * - 0.5 to 0.89 (orange): Needs Improvement\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:` * - 0.9 to 1 (green): Good\n`})}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\" */\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"export\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"function\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"draw\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"score\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token builtin\",children:\"number\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" value\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token builtin\",children:\"number\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"if\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"score \",(0,n.jsx)(e.span,{className:\"token operator\",children:\">=\"}),\" \",(0,n.jsx)(e.span,{className:\"token number\",children:\"0.9\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"&&\"}),\" score \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<=\"}),\" \",(0,n.jsx)(e.span,{className:\"token number\",children:\"1\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"return\"}),\" chalk\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"green\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsxs)(e.span,{className:\"token template-string\",children:[(0,n.jsx)(e.span,{className:\"token template-punctuation string\",children:\"`\"}),(0,n.jsxs)(e.span,{className:\"token interpolation\",children:[(0,n.jsx)(e.span,{className:\"token interpolation-punctuation punctuation\",children:\"${\"}),\"value\",(0,n.jsx)(e.span,{className:\"token interpolation-punctuation punctuation\",children:\"}\"})]}),(0,n.jsx)(e.span,{className:\"token string\",children:\" (Good)\"}),(0,n.jsx)(e.span,{className:\"token template-punctuation string\",children:\"`\"})]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"if\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"score \",(0,n.jsx)(e.span,{className:\"token operator\",children:\">=\"}),\" \",(0,n.jsx)(e.span,{className:\"token number\",children:\"0.5\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"&&\"}),\" score \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),\" \",(0,n.jsx)(e.span,{className:\"token number\",children:\"0.9\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"return\"}),\" chalk\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"yellow\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsxs)(e.span,{className:\"token template-string\",children:[(0,n.jsx)(e.span,{className:\"token template-punctuation string\",children:\"`\"}),(0,n.jsxs)(e.span,{className:\"token interpolation\",children:[(0,n.jsx)(e.span,{className:\"token interpolation-punctuation punctuation\",children:\"${\"}),\"value\",(0,n.jsx)(e.span,{className:\"token interpolation-punctuation punctuation\",children:\"}\"})]}),(0,n.jsx)(e.span,{className:\"token string\",children:\" (Needs Improvement)\"}),(0,n.jsx)(e.span,{className:\"token template-punctuation string\",children:\"`\"})]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"return\"}),\" chalk\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"red\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsxs)(e.span,{className:\"token template-string\",children:[(0,n.jsx)(e.span,{className:\"token template-punctuation string\",children:\"`\"}),(0,n.jsxs)(e.span,{className:\"token interpolation\",children:[(0,n.jsx)(e.span,{className:\"token interpolation-punctuation punctuation\",children:\"${\"}),\"value\",(0,n.jsx)(e.span,{className:\"token interpolation-punctuation punctuation\",children:\"}\"})]}),(0,n.jsx)(e.span,{className:\"token string\",children:\" (Poor)\"}),(0,n.jsx)(e.span,{className:\"token template-punctuation string\",children:\"`\"})]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Use it in \",(0,n.jsx)(e.code,{children:\"src/index.ts\"}),\" and try log something with \",(0,n.jsx)(e.code,{children:\"draw()\"}),\" to see the result.\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-ts\",children:(0,n.jsxs)(e.code,{className:\"language-ts code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"// src/index.ts\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"import\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\" draw \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"from\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'./utils'\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token builtin\",children:\"console\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"log\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsxs)(e.span,{className:\"token template-string\",children:[(0,n.jsx)(e.span,{className:\"token template-punctuation string\",children:\"`\"}),(0,n.jsx)(e.span,{className:\"token string\",children:\"Perf score is \"}),(0,n.jsxs)(e.span,{className:\"token interpolation\",children:[(0,n.jsx)(e.span,{className:\"token interpolation-punctuation punctuation\",children:\"${\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"draw\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token number\",children:\"0.64\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token number\",children:\"64\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token interpolation-punctuation punctuation\",children:\"}\"})]}),(0,n.jsx)(e.span,{className:\"token template-punctuation string\",children:\"`\"})]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.h3,{id:\"designing-a-command-with-commander\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#designing-a-command-with-commander\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Designing A Command with \",(0,n.jsx)(e.code,{children:\"commander\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[`To make our CLI interactive, we need to be able to read user inputs and parse them.\n`,(0,n.jsx)(e.a,{href:\"https://github.com/tj/commander.js\",children:(0,n.jsx)(e.code,{children:\"commander\"})}),` is a descriptive way of defining a interface.\nWe can implement our interface in a very clean and documentary fashion.`]}),`\n`,(0,n.jsx)(e.p,{children:`How do we want the users to interact with the CLI is to simply pass a URL for Lighthouse to run.\nWe also want to pass in an option to specify how many times Lighthouse should run on the URL.\nLike this:`}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsxs)(e.code,{className:\"language-bash code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"# without an option\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`$ my-script https://dawchihliou.github.io/\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"# with an option\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"$ my-script https://dawchihliou.github.io/ --iteration\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),(0,n.jsx)(e.span,{className:\"token number\",children:\"3\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Let's see how quickly we can implement our design with \",(0,n.jsx)(e.code,{children:\"commander\"}),\".\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsx)(e.code,{className:\"language-bash code-highlight\",children:(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"$ \",(0,n.jsx)(e.span,{className:\"token function\",children:\"yarn\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"add\"}),` commander\n`]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Let's clear the \",(0,n.jsx)(e.code,{children:\"src/index.ts\"}),\" and start fresh:\"]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.code,{children:\"src/index.ts\"})}),`\n`,(0,n.jsx)(e.pre,{className:\"language-ts\",children:(0,n.jsxs)(e.code,{className:\"language-ts code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token hashbang comment\",children:\"#!/usr/bin/env node\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"import\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\" Command \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"from\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'commander'\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"async\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"function\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"run\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"const\"}),\" program \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"new\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Command\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`  program\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"argument\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:\"'<url>'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'Lighthouse will run the analysis on the URL.'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"option\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'-i, --iteration <type>'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'How many times Lighthouse should run the analysis per URL'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'5'\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"parse\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),\"url\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" program\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),`args\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"const\"}),\" options \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" program\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"opts\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token builtin\",children:\"console\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"log\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsxs)(e.span,{className:\"token template-string\",children:[(0,n.jsx)(e.span,{className:\"token template-punctuation string\",children:\"`\"}),(0,n.jsx)(e.span,{className:\"token string\",children:\"url: \"}),(0,n.jsxs)(e.span,{className:\"token interpolation\",children:[(0,n.jsx)(e.span,{className:\"token interpolation-punctuation punctuation\",children:\"${\"}),\"url\",(0,n.jsx)(e.span,{className:\"token interpolation-punctuation punctuation\",children:\"}\"})]}),(0,n.jsx)(e.span,{className:\"token string\",children:\", iteration: \"}),(0,n.jsxs)(e.span,{className:\"token interpolation\",children:[(0,n.jsx)(e.span,{className:\"token interpolation-punctuation punctuation\",children:\"${\"}),\"options\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"iteration\",(0,n.jsx)(e.span,{className:\"token interpolation-punctuation punctuation\",children:\"}\"})]}),(0,n.jsx)(e.span,{className:\"token template-punctuation string\",children:\"`\"})]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token function\",children:\"run\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"We first instantiated a \",(0,n.jsx)(e.code,{children:\"Command\"}),\" and we used the instance \",(0,n.jsx)(e.code,{children:\"program\"}),\" to define:\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"an \",(0,n.jsx)(e.a,{href:\"https://github.com/tj/commander.js#command-arguments\",children:(0,n.jsx)(e.code,{children:\"required argument\"})}),\": we gave it a name \",(0,n.jsx)(e.code,{children:\"url\"}),\" and a description\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"an \",(0,n.jsx)(e.a,{href:\"https://github.com/tj/commander.js#options\",children:(0,n.jsx)(e.code,{children:\"option\"})}),\": we gave it a short flag and a long flag, a description, and a default value\"]}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"To consume the argument and option, we first parse the command and log the variables.\"}),`\n`,(0,n.jsx)(e.p,{children:\"Now we can run the command and observe the log.\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsxs)(e.code,{className:\"language-bash code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"$ \",(0,n.jsx)(e.span,{className:\"token function\",children:\"yarn\"}),` build\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"# without an option\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`$ my-script https://dawchihliou.github.io/\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"# url: https://dawchihliou.github.io/, iteration: 5\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"# with an option\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"$ my-script https://dawchihliou.github.io/ --iteration\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),(0,n.jsx)(e.span,{className:\"token number\",children:\"3\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"# or\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"$ my-script https://dawchihliou.github.io/ -i \",(0,n.jsx)(e.span,{className:\"token number\",children:\"3\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"# url: https://dawchihliou.github.io/, iteration: 3\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[`Very cool right?!\nAnother cool feature is that `,(0,n.jsx)(e.code,{children:\"commander\"}),\" automatically generates a \",(0,n.jsx)(e.a,{href:\"https://github.com/tj/commander.js#automated-help\",children:(0,n.jsx)(e.code,{children:\"help\"})}),\" to print the help information.\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsx)(e.code,{className:\"language-bash code-highlight\",children:(0,n.jsx)(e.span,{className:\"code-line\",children:`$ my-script --help\n`})})}),`\n`,(0,n.jsxs)(e.h3,{id:\"running-multiple-lighthouse-analyses-in-separate-os-processes\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#running-multiple-lighthouse-analyses-in-separate-os-processes\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Running Multiple Lighthouse Analyses in Separate OS Processes\"]}),`\n`,(0,n.jsx)(e.p,{children:\"We learned how to parse user inputs in the previous section. It's time to dive into the core of the CLI.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"The recommendation for running multiple Lighthouse is to run them in \",(0,n.jsx)(e.a,{href:\"https://github.com/GoogleChrome/lighthouse/issues/7187\",children:\"separate processes\"}),` to remove the risk of interference.\n`,(0,n.jsx)(e.a,{href:\"https://github.com/moxystudio/node-cross-spawn\",children:(0,n.jsx)(e.code,{children:\"cross-spawn\"})}),` is a cross platform solution for spawning processes.\nWe will use it to synchronously spawn new processes to run Lighthouse.`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"To install \",(0,n.jsx)(e.code,{children:\"cross-spawn\"}),\":\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsxs)(e.code,{className:\"language-bash code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"$ \",(0,n.jsx)(e.span,{className:\"token function\",children:\"yarn\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"add\"}),` cross-spawn\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"$ \",(0,n.jsx)(e.span,{className:\"token function\",children:\"yarn\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"add\"}),` --dev @types/cross-spawn\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsxs)(e.span,{className:\"token comment\",children:[\"# Let's install lighthouse too\",(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"sparkles\",children:\"\\u2728\"})]}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token function\",children:\"yarn\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"add\"}),` lighthouse\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Let's edit \",(0,n.jsx)(e.code,{children:\"src/index.ts\"}),\":\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-diff\",children:(0,n.jsxs)(e.code,{className:\"language-diff code-highlight\",children:[(0,n.jsx)(e.span,{className:\"code-line\",children:`import { Command } from 'commander'\n`}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:` import spawn from 'cross-spawn'\n`})]})}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token inserted-sign inserted\",children:(0,n.jsx)(e.span,{className:\"token line\"})}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:` const lighthouse = require.resolve('lighthouse/lighthouse-cli')\n`})]})}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token inserted-sign inserted\",children:(0,n.jsx)(e.span,{className:\"token line\"})}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`async function run() {\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsxs)(e.span,{className:\"token unchanged\",children:[(0,n.jsx)(e.span,{className:\"token prefix unchanged\",children:\" \"}),(0,n.jsx)(e.span,{className:\"token line\",children:` // ...\n`})]})}),(0,n.jsxs)(e.span,{className:\"code-line deleted\",children:[(0,n.jsx)(e.span,{className:\"token unchanged\",children:(0,n.jsx)(e.span,{className:\"token line\"})}),(0,n.jsxs)(e.span,{className:\"token deleted-sign deleted\",children:[(0,n.jsx)(e.span,{className:\"token prefix deleted\",children:\"-\"}),(0,n.jsx)(e.span,{className:\"token line\",children:\"  console.log(`url: ${url}, iteration: ${options.iteration}`)\\n\"})]})]}),(0,n.jsxs)(e.span,{className:\"code-line inserted\",children:[(0,n.jsx)(e.span,{className:\"token deleted-sign deleted\",children:(0,n.jsx)(e.span,{className:\"token line\"})}),(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`  console.log(\n`})]})]}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsxs)(e.span,{className:\"token line\",children:[\"    `\",(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"Tokyo tower\",children:\"\\u{1F5FC}\"}),\" Running Lighthouse for ${url}. It will take a while, please wait...`\\n\"]})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`  )\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`  const results = []\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`  for (let i = 0; i < options.iteration; i++) {\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`    const { status, stdout } = spawn.sync(\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`      process.execPath, [\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`      lighthouse,\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`      url,\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`      '--output=json',\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`      '--chromeFlags=--headless',\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`      '--only-categories=performance',\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`    ])\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`    if (status !== 0) {\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`      continue\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`    }\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`    results.push(JSON.parse(stdout.toString()))\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`  }\n`})]})}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token inserted-sign inserted\",children:(0,n.jsx)(e.span,{className:\"token line\"})}),`}\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[`In the code, we spawn new processes multiple times based on user input.\nIn each process, we ran Lighthouse performance analysis with headless Chrome and collect the the JSON data.\nThe `,(0,n.jsx)(e.code,{children:\"result\"}),` variable will hold an array of independent performance data in string.\nThe next step is to aggregate the data and calculate the most reliable performance scores.`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"If you implement the code above, you'll see a linting error about \",(0,n.jsx)(e.code,{children:\"require\"}),`.\n`,(0,n.jsx)(e.code,{children:\"require.resolve\"}),` resolves the path to a module instead of the module itself.\nIn this article, we'll allow the `,(0,n.jsx)(e.code,{children:\"@typescript-eslint/no-var-requires\"}),\" rule in \",(0,n.jsx)(e.code,{children:\".eslintrc.js\"}),\" to compile.\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-diff\",children:(0,n.jsxs)(e.code,{className:\"language-diff code-highlight\",children:[(0,n.jsx)(e.span,{className:\"code-line\",children:`// .eslintrc.js\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`module.exports = {\n`}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`  rules: {\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`    // allow require\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`    '@typescript-eslint/no-var-requires': 0,\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`  },\n`})]})}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token inserted-sign inserted\",children:(0,n.jsx)(e.span,{className:\"token line\"})}),`}\n`]})]})}),`\n`,(0,n.jsxs)(e.h3,{id:\"calculating-reliable-lighthouse-scores\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#calculating-reliable-lighthouse-scores\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Calculating Reliable Lighthouse Scores\"]}),`\n`,(0,n.jsxs)(e.p,{children:[`One strategy is to aggregate the reports by calculating the median.\nLighthouse provide a internal functionality `,(0,n.jsx)(e.a,{href:\"https://github.com/GoogleChrome/lighthouse/blob/master/lighthouse-core/lib/median-run.js\",children:(0,n.jsx)(e.code,{children:\"computeMedianRun\"})}),`.\nLet's use it`]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-diff\",children:(0,n.jsxs)(e.code,{className:\"language-diff code-highlight\",children:[(0,n.jsx)(e.span,{className:\"code-line\",children:`// src/index.ts\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:` // For simplicity, we use require here because lighthouse doesn't provide type declaration.\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:` const {\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`   computeMedianRun,\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:` } = require('lighthouse/lighthouse-core/lib/median-run.js')\n`})]})}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token inserted-sign inserted\",children:(0,n.jsx)(e.span,{className:\"token line\"})}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`async function run() {\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsxs)(e.span,{className:\"token unchanged\",children:[(0,n.jsx)(e.span,{className:\"token prefix unchanged\",children:\" \"}),(0,n.jsx)(e.span,{className:\"token line\",children:` // ...\n`})]})}),(0,n.jsxs)(e.span,{className:\"code-line inserted\",children:[(0,n.jsx)(e.span,{className:\"token unchanged\",children:(0,n.jsx)(e.span,{className:\"token line\"})}),(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`   const median = computeMedianRun(results)\n`})]})]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token inserted-sign inserted\",children:(0,n.jsx)(e.span,{className:\"token line\"})}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:\"   console.log(`\\\\n${chalk.green('\\u2714')} Report is ready for ${median.finalUrl}`)\\n\"})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`   console.log(\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsxs)(e.span,{className:\"token line\",children:[\"     `\",(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"Tokyo tower\",children:\"\\u{1F5FC}\"}),\" Median performance score: ${draw(\\n\"]})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`       median.categories.performance.score,\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`       median.categories.performance.score * 100\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:\"     )}`\\n\"})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`   )\n`})]})}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token inserted-sign inserted\",children:(0,n.jsx)(e.span,{className:\"token line\"})}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`   const primaryMatrices = [\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`     'first-contentful-paint',\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`     'interactive',\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`     'speed-index',\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`     'total-blocking-time',\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`     'largest-contentful-paint',\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`     'cumulative-layout-shift',\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`   ]\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`   primaryMatrices.map((matrix) => {\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`     const { title, displayValue, score } = median.audits[matrix]\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsxs)(e.span,{className:\"token line\",children:[\"     console.log(`\",(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"Tokyo tower\",children:\"\\u{1F5FC}\"}),\" Median ${title}: ${draw(score, displayValue)}`)\\n\"]})]})}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token line\"}),(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`   })\n`})]})}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token inserted-sign inserted\",children:(0,n.jsx)(e.span,{className:\"token line\"})}),`}\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Under the hood, \",(0,n.jsx)(e.code,{children:\"computeMedianRun\"}),` returns the score that's closest to the median of the First Contentful Paint and the median of the Time to Interactive.\nIt's because they represent the earliest and the latest moments in the page initialization lifecycle.\nIt's a more reliable way to determine the median than the naive approach by finding the median from a single measurement.`]}),`\n`,(0,n.jsx)(e.p,{children:\"Now try the command again and see the result!\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsx)(e.code,{className:\"language-bash code-highlight\",children:(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"$ \",(0,n.jsx)(e.span,{className:\"token function\",children:\"yarn\"}),\" build \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"&&\"}),\" my-script https://dawchihliou.github.io --iteration\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),(0,n.jsx)(e.span,{className:\"token number\",children:\"3\"}),`\n`]})})}),`\n`,(0,n.jsx)(\"img\",{src:\"/optimized/articles/writing-your-own-typescript-cli/command-line.webp\",alt:\"Screenshot of my-script final output\",width:\"100%\",loading:\"lazy\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Walla\",(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"party popper\",children:\"\\u{1F389}\"})]}),`\n`,(0,n.jsxs)(e.h2,{id:\"using-the-cli-in-github-actions\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#using-the-cli-in-github-actions\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Using the CLI in GitHub Actions\"]}),`\n`,(0,n.jsx)(e.p,{children:`Our implementation is done.\nLet's use the CLI in an automated workflow so we can benchmark the performance in a CD/CI pipeline.`}),`\n`,(0,n.jsx)(e.p,{children:\"First, let's publish the package on npm (hypothetically).\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"I published a npm package \",(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.a,{href:\"https://github.com/DawChihLiou/dx-scripts/\",children:(0,n.jsx)(e.code,{children:\"dx-scripts\"})})}),\" that includes the production-ready version of \",(0,n.jsx)(e.code,{children:\"my-script\"}),`.\nWe will write the GitHub Actions workflow with `,(0,n.jsx)(e.code,{children:\"dx-scripts\"}),\" to illustrate.\"]}),`\n`,(0,n.jsxs)(e.h3,{id:\"publishing-on-npm-an-example\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#publishing-on-npm-an-example\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Publishing on npm (an example)\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"We'll add a \",(0,n.jsx)(e.code,{children:\"files\"}),\" property in \",(0,n.jsx)(e.code,{children:\"package.json\"}),\" to publish the \",(0,n.jsx)(e.code,{children:\"/bin\"}),\" directory.\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-diff\",children:(0,n.jsxs)(e.code,{className:\"language-diff code-highlight\",children:[(0,n.jsx)(e.span,{className:\"code-line\",children:`// package.json\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`{\n`}),(0,n.jsx)(e.span,{className:\"code-line inserted\",children:(0,n.jsxs)(e.span,{className:\"token inserted-sign inserted\",children:[(0,n.jsx)(e.span,{className:\"token prefix inserted\",children:\"+\"}),(0,n.jsx)(e.span,{className:\"token line\",children:`  \"files\": [\"bin\"],\n`})]})}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token inserted-sign inserted\",children:(0,n.jsx)(e.span,{className:\"token line\"})}),`}\n`]})]})}),`\n`,(0,n.jsx)(e.p,{children:\"Then simply run:\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsx)(e.code,{className:\"language-bash code-highlight\",children:(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"$ \",(0,n.jsx)(e.span,{className:\"token function\",children:\"yarn\"}),` publish\n`]})})}),`\n`,(0,n.jsx)(e.p,{children:\"Now the package is on npm (hypothetically)!\"}),`\n`,(0,n.jsxs)(e.h3,{id:\"writing-a-workflow\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#writing-a-workflow\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Writing A Workflow\"]}),`\n`,(0,n.jsx)(e.p,{children:\"Let's discuss the workflow. We want the workflow to:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"run on a pull request when there's an update\"}),`\n`,(0,n.jsx)(e.li,{children:\"run the Lighthouse performance analysis against a feature branch preview URL\"}),`\n`,(0,n.jsx)(e.li,{children:\"notify the pull request with the analysis report\"}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"So after the workflow is successfully completed, you'll see a comment from GitHub Action Bot with your Lighthouse scores.\"}),`\n`,(0,n.jsx)(e.p,{children:\"To focus on the application of our CLI, I'll hard-code the feature branch preview URL in the workflow.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"In your application repository, install \",(0,n.jsx)(e.code,{children:\"dx-scripts\"}),\":\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsx)(e.code,{className:\"language-bash code-highlight\",children:(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"$ \",(0,n.jsx)(e.span,{className:\"token function\",children:\"yarn\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"add\"}),` --dev dx-scripts\n`]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Add a \",(0,n.jsx)(e.code,{children:\"lighthouse-dev-ci.yaml\"}),\" to your GitHub workflows directory:\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-yaml\",children:(0,n.jsxs)(e.code,{className:\"language-yaml code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"# .github/workflows/lighthouse-dev-ci.yaml\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token key atrule\",children:\"name\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` Lighthouse CI\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token key atrule\",children:\"on\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` pull_request\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token key atrule\",children:\"jobs\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token key atrule\",children:\"lighthouse\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token key atrule\",children:\"runs-on\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" ubuntu\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"-\"}),`latest\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token key atrule\",children:\"env\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token comment\",children:\"# You can substitute the hardcoded preview url with your preview url\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token key atrule\",children:\"preview_url\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" https\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`//dawchihliou.github.io/\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token key atrule\",children:\"steps\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"-\"}),\" \",(0,n.jsx)(e.span,{className:\"token key atrule\",children:\"uses\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` actions/checkout@v2\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"-\"}),\" \",(0,n.jsx)(e.span,{className:\"token key atrule\",children:\"uses\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" actions/setup\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"-\"}),`node@v1\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsx)(e.span,{className:\"token key atrule\",children:\"with\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"          \",(0,n.jsx)(e.span,{className:\"token key atrule\",children:\"node-version\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'16.x'\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"-\"}),\" \",(0,n.jsx)(e.span,{className:\"token key atrule\",children:\"name\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` Install dependencies\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsx)(e.span,{className:\"token key atrule\",children:\"run\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` yarn\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token comment\",children:\"# You can add your steps here to create a preview\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"-\"}),\" \",(0,n.jsx)(e.span,{className:\"token key atrule\",children:\"name\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` Run Lighthouse\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsx)(e.span,{className:\"token key atrule\",children:\"id\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` lighthouse\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsx)(e.span,{className:\"token key atrule\",children:\"shell\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` bash\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsx)(e.span,{className:\"token key atrule\",children:\"run\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"|\"}),(0,n.jsx)(e.span,{className:\"token scalar string\",children:`\n`})]}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token scalar string\",children:`          lighthouse=$(npx dx-scripts lighthouse $preview_url)\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token scalar string\",children:`          lighthouse=\"\\${lighthouse//'%'/'%25'}\"\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token scalar string\",children:`          lighthouse=\"\\${lighthouse//$'\\\\n'/'%0A'}\"\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token scalar string\",children:`          lighthouse=\"\\${lighthouse//$'\\\\r'/'%0D'}\"\n`})}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token scalar string\",children:'          echo \"::set-output name=lighthouse_report::$lighthouse\"'}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"-\"}),\" \",(0,n.jsx)(e.span,{className:\"token key atrule\",children:\"name\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` Notify PR\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsx)(e.span,{className:\"token key atrule\",children:\"uses\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" wow\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"-\"}),\"actions/auto\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"-\"}),`comment@v1\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsx)(e.span,{className:\"token key atrule\",children:\"with\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"          \",(0,n.jsx)(e.span,{className:\"token key atrule\",children:\"GITHUB_TOKEN\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" $\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\" secrets.GITHUB_TOKEN \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"          \",(0,n.jsx)(e.span,{className:\"token key atrule\",children:\"pullRequestSynchronize\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"|\"}),(0,n.jsx)(e.span,{className:\"token scalar string\",children:`\n`})]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsxs)(e.span,{className:\"token scalar string\",children:[\"            \",(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"waving hand\",children:\"\\u{1F44B}\"}),\" @{{ author }},\"]}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"            Here is your Lighthouse performance overview\",(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"party popper\",children:\"\\u{1F389}\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:\"            ```\\n\"}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"            $\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\" steps.lighthouse.outputs.lighthouse_report \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:\"            ```\\n\"})]})}),`\n`,(0,n.jsxs)(e.p,{children:['In the \"Run Lighthouse\" step, we ran the ',(0,n.jsx)(e.code,{children:\"dx-script lighthouse\"}),\" CLI, substitute the special characters in order to print multi-line output, and we set the output in a variable \",(0,n.jsx)(e.code,{children:\"lighthouse_report\"}),`.\nIn the \"Notify PR\" step, we wrote a comment with the output from the \"Run Lighthouse\" step and use the `,(0,n.jsxs)(e.a,{href:\"https://github.com/marketplace/actions/auto-comment\",children:[(0,n.jsx)(e.code,{children:\"wow-actions/auto-comment\"}),\" \"]}),\" action to post the comment.\"]}),`\n`,(0,n.jsx)(\"img\",{src:\"/optimized/articles/writing-your-own-typescript-cli/pr-comment.webp\",alt:\"Screenshot of a PR comment posted from the Lighthouse CI\",width:\"100%\",loading:\"lazy\"}),`\n`,(0,n.jsx)(e.p,{children:`That's it! What a journey\\u200D.\nIt's amazing that you followed all the way through.`}),`\n`,(0,n.jsxs)(e.h2,{id:\"to-sum-up\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#to-sum-up\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"To Sum up\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Writing a CLI is not too hard, right?\",(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"smiling face with sunglasses\",children:\"\\u{1F60E}\"}),`\nLet's have a look at all the things we've covered:`]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"configuring TypeScript\"}),`\n`,(0,n.jsx)(e.li,{children:\"configuring ESLint\"}),`\n`,(0,n.jsx)(e.li,{children:\"configuring Prettier\"}),`\n`,(0,n.jsx)(e.li,{children:\"executing your command locally\"}),`\n`,(0,n.jsxs)(e.li,{children:[\"coloring logs with \",(0,n.jsx)(e.code,{children:\"chalk\"})]}),`\n`,(0,n.jsxs)(e.li,{children:[\"defining your command with \",(0,n.jsx)(e.code,{children:\"commander\"})]}),`\n`,(0,n.jsx)(e.li,{children:\"spawning processes\"}),`\n`,(0,n.jsx)(e.li,{children:\"executing Lighthouse CLI\"}),`\n`,(0,n.jsx)(e.li,{children:\"using Lighthouse's internal library to calculate median performance scores\"}),`\n`,(0,n.jsx)(e.li,{children:\"publish your command as a npm package\"}),`\n`,(0,n.jsx)(e.li,{children:\"applying your command to a GitHub Action workflow\"}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Now the super power is yours too\",(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"rocket\",children:\"\\u{1F680}\"})]}),`\n`,(0,n.jsx)(e.hr,{}),`\n`,(0,n.jsxs)(e.p,{children:[\"Here you have it! I hope you find it useful. Thanks for reading through\",(0,n.jsx)(e.span,{role:\"img\",\"aria-label\":\"raising hands\",children:\"\\u{1F64C}\"})]}),`\n`,(0,n.jsx)(e.p,{children:\"Please share this article so that more people who're looking for inspirations can see it.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Feel free to connect with me on \",(0,n.jsx)(e.a,{href:\"https://twitter.com/dawchihliou\",children:\"twitter\"}),\"!\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"If you're interested in reading more about image optimization to boost your performance score, take a look at my previous article \",(0,n.jsx)(e.a,{href:\"/articles/use-webp-for-better-ux\",children:'\"Using WebP for Better User Experience\"'}),`.\nThere we discussed one of the modern image formats that greatly reduces the size of your images without sacrificing quality.`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"If you're wondering how to test Redux Observable, I wrote an article \",(0,n.jsx)(e.a,{href:\"https://itnext.io/better-marble-test-70c7676a1e2\",children:'\"Writing Better Marble Tests for Redux Observable and TypeScript\"'}),` just for you.\nIt's a comprehensive guide to walk you through the thought process.`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"If you\\u2019re a fan of functional programming, check out \",(0,n.jsx)(e.a,{href:\"https://medium.com/@dawchihliou/intuitive-transducer-in-javascript-f358d3fe53d\",children:\"this article that I wrote about Transducers\"}),`.\nIt\\u2019s a step by step reasoning on writing a transducer and it touches on key ideas about functional programming.`]}),`\n`,(0,n.jsx)(e.p,{children:\"Happy coding!\"})]});return s?(0,n.jsx)(s,Object.assign({},a,{children:i})):i}var y=f;return w;})();\n;return Component.default;"},"_id":"articles/writing-your-own-typescript-cli.mdx","_raw":{"sourceFilePath":"articles/writing-your-own-typescript-cli.mdx","sourceFileName":"writing-your-own-typescript-cli.mdx","sourceFileDir":"articles","bodyType":"mdx","flattenedPath":"articles/writing-your-own-typescript-cli"},"type":"Article","readingTime":{"text":"16 min read","minutes":15.54,"time":932400,"words":3108},"wordCount":3110,"slug":"writing-your-own-typescript-cli"}},"__N_SSG":true}