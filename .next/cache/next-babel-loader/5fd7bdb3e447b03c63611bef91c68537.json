{"ast":null,"code":"var _jsxFileName = \"/Users/dawchihliou/Sites/dawchihliou.github.io/components/Nav/Nav.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { push as Menu } from 'react-burger-menu';\nimport { useRouter } from 'next/router';\nimport { FiMenu, FiX } from 'react-icons/fi';\nimport styles from './Nav.module.css';\nexport default function Nav() {\n  const router = useRouter();\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n\n  const handleNav = href => event => {\n    setIsOpen(false);\n    router.push(href);\n  };\n\n  return __jsx(\"header\", {\n    className: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(Menu, {\n    pageWrapId: 'page-wrap',\n    outerContainerId: 'outer-container',\n    customBurgerIcon: __jsx(FiMenu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 27\n      }\n    }),\n    customCrossIcon: __jsx(FiX, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 26\n      }\n    }),\n    isOpen: isOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    onClick: handleNav('/'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"Home\"), __jsx(\"span\", {\n    onClick: handleNav('/now'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Now\"), __jsx(\"span\", {\n    onClick: handleNav('/publications'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"Publications\")));\n}","map":{"version":3,"sources":["/Users/dawchihliou/Sites/dawchihliou.github.io/components/Nav/Nav.tsx"],"names":["React","useState","push","Menu","useRouter","FiMenu","FiX","styles","Nav","router","isOpen","setIsOpen","handleNav","href","event","header"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAI,IAAIC,IAAjB,QAA6B,mBAA7B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,gBAA5B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM;AAAA,OAACM,MAAD;AAAA,OAASC;AAAT,MAAsBV,QAAQ,CAAC,KAAD,CAApC;;AACA,QAAMW,SAAS,GAAIC,IAAD,IAChBC,KADkC,IAE/B;AACHH,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAF,IAAAA,MAAM,CAACP,IAAP,CAAYW,IAAZ;AACD,GALD;;AAMA,SACE;AAAQ,IAAA,SAAS,EAAEN,MAAM,CAACQ,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,UAAU,EAAE,WADd;AAEE,IAAA,gBAAgB,EAAE,iBAFpB;AAGE,IAAA,gBAAgB,EAAE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHpB;AAIE,IAAA,eAAe,EAAE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJnB;AAKE,IAAA,MAAM,EAAEL,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAM,IAAA,OAAO,EAAEE,SAAS,CAAC,GAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,EAQE;AAAM,IAAA,OAAO,EAAEA,SAAS,CAAC,MAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WARF,EASE;AAAM,IAAA,OAAO,EAAEA,SAAS,CAAC,eAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF,CADF,CADF;AAeD","sourcesContent":["import React, { useState } from 'react'\nimport { push as Menu } from 'react-burger-menu'\nimport { useRouter } from 'next/router'\nimport { FiMenu, FiX } from 'react-icons/fi'\nimport styles from './Nav.module.css'\n\nexport default function Nav() {\n  const router = useRouter()\n  const [isOpen, setIsOpen] = useState(false)\n  const handleNav = (href: string) => (\n    event: React.MouseEvent<Element, MouseEvent>\n  ) => {\n    setIsOpen(false)\n    router.push(href)\n  }\n  return (\n    <header className={styles.header}>\n      <Menu\n        pageWrapId={'page-wrap'}\n        outerContainerId={'outer-container'}\n        customBurgerIcon={<FiMenu />}\n        customCrossIcon={<FiX />}\n        isOpen={isOpen}\n      >\n        <span onClick={handleNav('/')}>Home</span>\n        <span onClick={handleNav('/now')}>Now</span>\n        <span onClick={handleNav('/publications')}>Publications</span>\n      </Menu>\n    </header>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}